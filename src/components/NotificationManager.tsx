
import React from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Bell, BellOff, Loader2, CheckCircle, XCircle, AlertCircle, RefreshCw, Settings, Zap } from 'lucide-react';
import { useFCM } from '@/hooks/useFCM';
import { Alert, AlertDescription } from '@/components/ui/alert';

const NotificationManager = () => {
  const { 
    fcmToken, 
    isSupported, 
    isLoading, 
    permissionStatus, 
    requestPermission, 
    disableNotifications,
    resetPermissions,
    forceActivation
  } = useFCM();

  const getStatusInfo = () => {
    if (!isSupported) {
      return {
        icon: <XCircle className="h-5 w-5 text-red-500" />,
        status: 'N√£o Suportado',
        color: 'text-red-500'
      };
    }

    if (fcmToken) {
      return {
        icon: <CheckCircle className="h-5 w-5 text-green-500" />,
        status: 'Ativas',
        color: 'text-green-500'
      };
    }

    return {
      icon: <AlertCircle className="h-5 w-5 text-yellow-500" />,
      status: 'Desativadas',
      color: 'text-yellow-500'
    };
  };

  const statusInfo = getStatusInfo();

  if (!isSupported) {
    return (
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <BellOff className="h-5 w-5" />
            <span>Notifica√ß√µes n√£o suportadas</span>
          </CardTitle>
          <CardDescription>
            Seu navegador n√£o suporta notifica√ß√µes push ou service workers.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <Alert>
            <AlertCircle className="h-4 w-4" />
            <AlertDescription>
              Para receber notifica√ß√µes, use um navegador moderno como Chrome, Firefox ou Safari.
            </AlertDescription>
          </Alert>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center space-x-2">
          <Bell className="h-5 w-5" />
          <span>Notifica√ß√µes Push - Administrador</span>
        </CardTitle>
        <CardDescription>
          Receba notifica√ß√µes instant√¢neas quando novos pedidos chegarem, mesmo com o navegador fechado.
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        {/* Status das Notifica√ß√µes */}
        <div className="flex items-center space-x-2">
          {statusInfo.icon}
          <span className={`font-medium ${statusInfo.color}`}>
            Status: {statusInfo.status}
          </span>
        </div>

        {/* Informa√ß√µes do Token */}
        {fcmToken && (
          <div className="p-3 bg-green-50 rounded-lg border border-green-200">
            <p className="text-sm text-green-700 font-medium">
              ‚úÖ Notifica√ß√µes configuradas com sucesso!
            </p>
            <p className="text-xs text-green-600 mt-1 font-mono break-all">
              Token: {fcmToken.substring(0, 30)}...
            </p>
          </div>
        )}

        {/* Instru√ß√µes para Ativar */}
        {!fcmToken && (
          <Alert>
            <Settings className="h-4 w-4" />
            <AlertDescription>
              <strong>üîß MODO ADMINISTRADOR - SEM BLOQUEIOS:</strong>
              <br />
              <br />
              Clique em qualquer um dos bot√µes abaixo para ativar as notifica√ß√µes.
              <br />
              Se um n√£o funcionar, tente o pr√≥ximo.
            </AlertDescription>
          </Alert>
        )}

        {/* Bot√µes de Controle */}
        <div className="flex gap-2 flex-wrap">
          {!fcmToken ? (
            <>
              <Button 
                onClick={requestPermission}
                disabled={isLoading}
                className="flex-1 min-w-[180px]"
                size="lg"
              >
                {isLoading ? (
                  <>
                    <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                    Ativando...
                  </>
                ) : (
                  <>
                    <Bell className="w-4 h-4 mr-2" />
                    Ativar Notifica√ß√µes
                  </>
                )}
              </Button>
              
              <Button 
                onClick={forceActivation}
                disabled={isLoading}
                variant="secondary"
                className="flex-1 min-w-[180px]"
                size="lg"
              >
                {isLoading ? (
                  <>
                    <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                    For√ßando...
                  </>
                ) : (
                  <>
                    <Zap className="w-4 h-4 mr-2" />
                    FOR√áAR ATIVA√á√ÉO
                  </>
                )}
              </Button>
              
              <Button 
                onClick={resetPermissions}
                variant="outline"
                className="flex-1 min-w-[180px]"
                size="lg"
              >
                <RefreshCw className="w-4 h-4 mr-2" />
                Resetar e Recarregar
              </Button>
            </>
          ) : (
            <Button 
              onClick={disableNotifications}
              variant="outline"
              className="flex-1"
              size="lg"
            >
              <BellOff className="w-4 h-4 mr-2" />
              Desativar Notifica√ß√µes
            </Button>
          )}
        </div>

        {/* Instru√ß√µes para Administrador */}
        <div className="text-xs text-gray-500 space-y-1 p-3 bg-blue-50 rounded-lg">
          <p className="font-medium text-blue-700">üë®‚Äçüíº MODO ADMINISTRADOR:</p>
          <p>‚Ä¢ TODOS OS BLOQUEIOS FORAM REMOVIDOS</p>
          <p>‚Ä¢ Clique em "Ativar Notifica√ß√µes" primeiro</p>
          <p>‚Ä¢ Se n√£o funcionar, clique em "FOR√áAR ATIVA√á√ÉO"</p>
          <p>‚Ä¢ Use "Resetar e Recarregar" se necess√°rio</p>
          <p>‚Ä¢ As notifica√ß√µes funcionar√£o mesmo com o navegador fechado</p>
        </div>

        {/* Teste de Notifica√ß√£o */}
        {fcmToken && (
          <Button 
            onClick={() => {
              if (Notification.permission === 'granted') {
                new Notification('üß™ Teste - Rascunho Luminoso', {
                  body: 'Esta √© uma notifica√ß√£o de teste! Se voc√™ v√™ isso, as notifica√ß√µes est√£o funcionando.',
                  icon: '/lovable-uploads/9d315dc9-03f6-4949-85dc-8c64f34b1b8f.png',
                  tag: 'test-notification',
                  requireInteraction: true
                });
              } else {
                // Mesmo sem permiss√£o, tentar mostrar notifica√ß√£o
                try {
                  new Notification('üß™ Teste For√ßado - Rascunho Luminoso', {
                    body: 'Notifica√ß√£o de teste for√ßada!',
                    icon: '/lovable-uploads/9d315dc9-03f6-4949-85dc-8c64f34b1b8f.png',
                  });
                } catch (error) {
                  console.log('Erro na notifica√ß√£o de teste:', error);
                  alert('üß™ Teste: Notifica√ß√µes est√£o ativas! (mostrado como alerta)');
                }
              }
            }}
            variant="secondary"
            size="sm"
            className="w-full"
          >
            üß™ Enviar Notifica√ß√£o de Teste
          </Button>
        )}
      </CardContent>
    </Card>
  );
};

export default NotificationManager;
